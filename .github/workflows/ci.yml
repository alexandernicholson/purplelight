name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo7:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({hello:1})'" --health-interval 5s --health-timeout 5s --health-retries 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Apache Arrow (Ubuntu)
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y -V ca-certificates lsb-release wget gnupg
          DIST=$(lsb_release -cs)
          wget https://apache.jfrog.io/artifactory/arrow/ubuntu/apache-arrow-apt-source-latest-$DIST.deb -O apache-arrow-apt-source.deb
          sudo apt install -y ./apache-arrow-apt-source.deb
          sudo apt-get update -y
          sudo apt-get install -y -V libarrow-dev=21.* libarrow-glib-dev=21.* libparquet-dev=21.* libparquet-glib-dev=21.*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install system deps (optional)
        run: |
          echo "No extra system deps for default test run"

      - name: Run specs (Linux, with Mongo service)
        env:
          MONGO_URL: mongodb://127.0.0.1:27017
        run: |
          bundle exec rspec --format progress

  test-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Apache Arrow (Homebrew)
        run: |
          brew update
          brew install apache-arrow apache-arrow-glib

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Start MongoDB (Docker) on macOS
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker version
          docker run -d --rm --name gha-mongo -p 27017:27017 mongo:7
          for i in {1..60}; do
            if docker exec gha-mongo mongosh --eval 'db.runCommand({hello:1})' >/dev/null 2>&1; then
              echo "Mongo is ready"; break; fi; sleep 1; done
      - name: Run specs (macOS, with Docker Mongo)
        env:
          MONGO_URL: mongodb://127.0.0.1:27017
        run: |
          bundle exec rspec --format progress --tag ~benchmark
      - name: Cleanup MongoDB container
        if: always()
        run: |
          docker rm -f gha-mongo || true


